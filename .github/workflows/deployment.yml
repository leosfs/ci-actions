name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

jobs:
  build-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: leosfs/teste-ci-cd:latest

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      

  deploy-test:

    needs: build-ci
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-20.04
    concurrency: deploy-to-test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build \
            --platform linux/amd64 \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=$(git rev-parse --short HEAD) \
            --tag leosfs/teste-ci-cd:$(date -u +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD) \
            --tag leosfs/teste-ci-cd:latest \
            .

      - name: Push Docker image
        run: |
          docker push leosfs/teste-ci-cd:$(date -u +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)
          docker push leosfs/teste-ci-cd:latest

  deploy-production:
    needs: build-ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    concurrency: deploy-to-production
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js latest
        uses: actions/setup-node@v2
        with:
          node-version: latest

      - run: docker build -t setup-nodejs .
      - run: echo "Deploy"